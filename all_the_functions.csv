func,package,description
abs,base,"\code{abs(x)} computes the absolute value of x, \code{sqrt(x)} computes the (principal) square root of x, \eqn{\sqrt{x}}{}.  The naming follows the standard for computer languages such as C or Fortran."
all,base,"Given a set of logical vectors, are all of the values true?"
all.equal,base,"\code{all.equal(x, y)} is a utility to compare \R{} objects \code{x} and \code{y} testing `near equality'.  If they are different, comparison is still made to some extent, and a report of the differences is returned.    Do not use \code{all.equal} directly in \code{if} expressions---either use \code{isTRUE(all.equal(....))} or \code{\LinkA{identical}{identical}} if appropriate."
any,base,"Given a set of logical vectors, is at least one of the values true?"
apply,base,Returns a vector or array or list of values obtained by applying a function to margins of an array or matrix.
array,base,Creates or tests for arrays.
as.character,base,"Create or test for objects of type \code{""character""}."
as.data.frame,base,"Functions to check if an object is a data frame, or coerce it if possible."
as.Date,base,"Functions to convert between character representations and objects of class \code{""Date""} representing calendar dates."
as.integer,base,"Creates or tests for objects of type \code{""integer""}."
as.logical,base,"Create or test for objects of type \code{""logical""}, and the basic logical constants."
as.matrix,base,\code{matrix} creates a matrix from the given set of values.  \code{as.matrix} attempts to turn its argument into a matrix.  \code{is.matrix} tests if its argument is a (strict) matrix.
as.numeric,base,"Creates or coerces objects of type \code{""numeric""}. \code{is.numeric} is a more general test of an object being interpretable as numbers."
basename,base,"\code{basename} removes all of the path up to and including the last path separator (if any).  \code{dirname} returns the part of the \code{path} up to but excluding the last path separator, or \code{"".""} if there is no path separator."
c,base,"This is a generic function which combines its arguments.  The default method combines its arguments to form a vector. All arguments are coerced to a common type which is the type of the returned value, and all attributes except names are removed."
cbind,base,"Take a sequence of vector, matrix or data-frame arguments and combine by \emph{c}olumns or \emph{r}ows, respectively.  These are generic functions with methods for other \R{} classes."
class,base,\R{} possesses a simple generic function mechanism which can be used for an object-oriented style of programming.  Method dispatch takes place based on the class of the first argument to the generic function.
colMeans,base,Form row and column sums and means for numeric arrays (or data frames).
colnames,base,Retrieve or set the row or column names of a matrix-like object.
cos,base,"These functions give the obvious trigonometric functions.  They respectively compute the cosine, sine, tangent, arc-cosine, arc-sine, arc-tangent, and the two-argument arc-tangent.  \code{cospi(x)}, \code{sinpi(x)}, and \code{tanpi(x)}, compute \code{cos(pi*x)}, \code{sin(pi*x)}, and \code{tan(pi*x)}."
cut,base,"\code{cut} divides the range of \code{x} into intervals and codes the values in \code{x} according to which interval they fall.  The leftmost interval corresponds to level one, the next leftmost to level two and so on."
data.frame,base,"The function \code{data.frame()} creates data frames, tightly coupled collections of variables which share many of the properties of matrices and of lists, used as the fundamental data structure by most of \R{}'s modeling software."
diff,base,Returns suitably lagged and iterated differences.
difftime,base,"Time intervals creation, printing, and some arithmetic.  The \code{\LinkA{print}{print}()} method calls these ``time differences''."
dim,base,Retrieve or set the dimension of an object.
dir,base,These functions produce a character vector of the names of files or directories in the named directory.
duplicated,base,"\code{duplicated()} determines which elements of a vector or data frame are duplicates of elements with smaller subscripts, and returns a logical vector indicating which elements (rows) are duplicates.  \code{anyDuplicated(.)} is a ``generalized'' more efficient shortcut for \code{any(duplicated(.))}."
exp,base,"\code{log} computes logarithms, by default natural logarithms, \code{log10} computes common (i.e., base 10) logarithms, and \code{log2} computes binary (i.e., base 2) logarithms. The general form \code{log(x, base)} computes logarithms with base \code{base}.  \code{log1p(x)} computes \eqn{\log(1+x)}{} accurately also for \eqn{|x| \ll 1}{}.  \code{exp} computes the exponential function.  \code{expm1(x)} computes \eqn{\exp(x) - 1}{} accurately also for \eqn{|x| \ll 1}{}."
expand.grid,base,Create a data frame from all combinations of the supplied vectors or factors.  See the description of the return value for precise details of the way this is done.
factor,base,"The function \code{factor} is used to encode a vector as a factor (the terms `category' and `enumerated type' are also used for factors).  If argument \code{ordered} is \code{TRUE}, the factor levels are assumed to be ordered.  For compatibility with S there is also a function \code{ordered}.  \code{is.factor}, \code{is.ordered}, \code{as.factor} and \code{as.ordered} are the membership and coercion functions for these classes."
file.exists,base,These functions provide a low-level interface to the computer's file system.
file.path,base,Construct the path to a file from components in a platform-independent way.
file.remove,base,These functions provide a low-level interface to the computer's file system.
getwd,base,\code{getwd} returns an absolute filepath representing the current working directory of the \R{} process; \code{setwd(dir)} is used to set the working directory to \code{dir}.
gl,base,Generate factors by specifying the pattern of their levels.
grep,base,"\code{grep}, \code{grepl}, \code{regexpr}, \code{gregexpr} and \code{regexec} search for matches to argument \code{pattern} within each element of a character vector: they differ in the format of and amount of detail in the results.  \code{sub} and \code{gsub} perform replacement of the first and all matches respectively."
grepl,base,"\code{grep}, \code{grepl}, \code{regexpr}, \code{gregexpr} and \code{regexec} search for matches to argument \code{pattern} within each element of a character vector: they differ in the format of and amount of detail in the results.  \code{sub} and \code{gsub} perform replacement of the first and all matches respectively."
gsub,base,"\code{grep}, \code{grepl}, \code{regexpr}, \code{gregexpr} and \code{regexec} search for matches to argument \code{pattern} within each element of a character vector: they differ in the format of and amount of detail in the results.  \code{sub} and \code{gsub} perform replacement of the first and all matches respectively."
identical,base,"The safe and reliable way to test two objects for being \emph{exactly} equal.  It returns \code{TRUE} in this case, \code{FALSE} in every other case."
ifelse,base,\code{ifelse} returns a value with the same shape as \code{test} which is filled with elements selected from either \code{yes} or \code{no} depending on whether the element of \code{test} is \code{TRUE} or \code{FALSE}.
is.character,base,"Create or test for objects of type \code{""character""}."
is.na,base,"\code{NA} is a logical constant of length 1 which contains a missing value indicator.  \code{NA} can be coerced to any other vector type except raw.  There are also constants \code{NA\_integer\_}, \code{NA\_real\_}, \code{NA\_complex\_} and \code{NA\_character\_} of the other atomic vector types which support missing values: all of these are \LinkA{reserved}{reserved} words in the \R{} language.  The generic function \code{is.na} indicates which elements are missing.  The generic function \code{is.na<-} sets elements to \code{NA}.  The generic function \code{anyNA} implements \code{any(is.na(x))} in a possibly faster way (especially for atomic vectors)."
is.numeric,base,"Creates or coerces objects of type \code{""numeric""}. \code{is.numeric} is a more general test of an object being interpretable as numbers."
jitter,base,Add a small amount of noise to a numeric vector.
lapply,base,"\code{lapply} returns a list of the same length as \code{X}, each element of which is the result of applying \code{FUN} to the corresponding element of \code{X}.  \code{sapply} is a user-friendly version and wrapper of \code{lapply} by default returning a vector, matrix or, if \code{simplify = ""array""}, an array if appropriate, by applying \code{simplify2array()}. \code{sapply(x, f, simplify = FALSE, USE.NAMES = FALSE)} is the same as \code{lapply(x, f)}.  \code{vapply} is similar to \code{sapply}, but has a pre-specified type of return value, so it can be safer (and sometimes faster) to use.  \code{replicate} is a wrapper for the common use of \code{sapply} for repeated evaluation of an expression (which will usually involve random number generation).  \code{simplify2array()} is the utility called from \code{sapply()} when \code{simplify} is not false and is similarly called from \code{\LinkA{mapply}{mapply}()}."
length,base,"Get or set the length of vectors (including lists) and factors, and of any other \R{} object for which a method has been defined."
levels,base,\code{levels} provides access to the levels attribute of a variable. The first form returns the value of the levels of its argument and the second sets the attribute.
library,base,\code{library} and \code{require} load and attach add-on packages.
list,base,"Functions to construct, coerce and check for both kinds of \R{} lists."
list.files,base,These functions produce a character vector of the names of files or directories in the named directory.
load,base,Reload datasets written with the function \code{save}.
log,base,"\code{log} computes logarithms, by default natural logarithms, \code{log10} computes common (i.e., base 10) logarithms, and \code{log2} computes binary (i.e., base 2) logarithms. The general form \code{log(x, base)} computes logarithms with base \code{base}.  \code{log1p(x)} computes \eqn{\log(1+x)}{} accurately also for \eqn{|x| \ll 1}{}.  \code{exp} computes the exponential function.  \code{expm1(x)} computes \eqn{\exp(x) - 1}{} accurately also for \eqn{|x| \ll 1}{}."
log10,base,"\code{log} computes logarithms, by default natural logarithms, \code{log10} computes common (i.e., base 10) logarithms, and \code{log2} computes binary (i.e., base 2) logarithms. The general form \code{log(x, base)} computes logarithms with base \code{base}.  \code{log1p(x)} computes \eqn{\log(1+x)}{} accurately also for \eqn{|x| \ll 1}{}.  \code{exp} computes the exponential function.  \code{expm1(x)} computes \eqn{\exp(x) - 1}{} accurately also for \eqn{|x| \ll 1}{}."
log2,base,"\code{log} computes logarithms, by default natural logarithms, \code{log10} computes common (i.e., base 10) logarithms, and \code{log2} computes binary (i.e., base 2) logarithms. The general form \code{log(x, base)} computes logarithms with base \code{base}.  \code{log1p(x)} computes \eqn{\log(1+x)}{} accurately also for \eqn{|x| \ll 1}{}.  \code{exp} computes the exponential function.  \code{expm1(x)} computes \eqn{\exp(x) - 1}{} accurately also for \eqn{|x| \ll 1}{}."
ls,base,"\code{ls} and \code{objects} return a vector of character strings giving the names of the objects in the specified environment.  When invoked with no argument at the top level prompt, \code{ls} shows what data sets and functions a user has defined.  When invoked with no argument inside a function, \code{ls} returns the names of the function's local variables: this is useful in conjunction with \code{browser}."
mapply,base,"\code{mapply} is a multivariate version of \code{\LinkA{sapply}{sapply}}. \code{mapply} applies \code{FUN} to the first elements of each \dots argument, the second elements, the third elements, and so on. Arguments are recycled if necessary."
margin.table,base,"For a contingency table in array form, compute the sum of table entries for a given index."
matrix,base,\code{matrix} creates a matrix from the given set of values.  \code{as.matrix} attempts to turn its argument into a matrix.  \code{is.matrix} tests if its argument is a (strict) matrix.
max,base,"Returns the (regular or \bold{p}arallel) maxima and minima of the input values.  \code{pmax*()} and \code{pmin*()} take one or more vectors as arguments, recycle them to common length and return a single vector giving the \emph{`parallel'} maxima (or minima) of the argument vectors."
mean,base,Generic function for the (trimmed) arithmetic mean.
merge,base,"Merge two data frames by common columns or row names, or do other versions of database \emph{join} operations."
min,base,"Returns the (regular or \bold{p}arallel) maxima and minima of the input values.  \code{pmax*()} and \code{pmin*()} take one or more vectors as arguments, recycle them to common length and return a single vector giving the \emph{`parallel'} maxima (or minima) of the argument vectors."
names,base,Functions to get or set the names of an object.
ncol,base,\code{nrow} and \code{ncol} return the number of rows or columns present in \code{x}. \code{NCOL} and \code{NROW} do the same treating a vector as 1-column matrix.
nrow,base,\code{nrow} and \code{ncol} return the number of rows or columns present in \code{x}. \code{NCOL} and \code{NROW} do the same treating a vector as 1-column matrix.
order,base,"\code{order} returns a permutation which rearranges its first argument into ascending or descending order, breaking ties by further arguments. \code{sort.list} is the same, using only one argument.\\{} See the examples for how to use these functions to sort data frames, etc."
outer,base,"The outer product of the arrays \code{X} and \code{Y} is the array \code{A} with dimension \code{c(dim(X), dim(Y))} where element \code{A[c(arrayindex.x, arrayindex.y)]     = FUN(X[arrayindex.x], Y[arrayindex.y], ...)}."
paste,base,Concatenate vectors after converting to character.
paste0,base,Concatenate vectors after converting to character.
print,base,\code{print} prints its argument and returns it \emph{invisibly} (via \code{\LinkA{invisible}{invisible}(x)}).  It is a generic function which means that new printing methods can be easily added for new \code{\LinkA{class}{class}}es.
prop.table,base,"This is really \code{sweep(x, margin, margin.table(x, margin), ""/"")} for newbies, except that if \code{margin} has length zero, then one gets \code{x/sum(x)}."
range,base,\code{range} returns a vector containing the minimum and maximum of all the given arguments.
rank,base,"Returns the sample ranks of the values in a vector.  Ties (i.e., equal values) and missing values can be handled in several ways."
readRDS,base,"Functions to write a single \R{} object to a file, and to restore it."
rep,base,"\code{rep} replicates the values in \code{x}.  It is a generic function, and the (internal) default method is described here.  \code{rep.int} and \code{rep\_len} are faster simplified versions for two common cases.  They are not generic."
rep.int,base,"\code{rep} replicates the values in \code{x}.  It is a generic function, and the (internal) default method is described here.  \code{rep.int} and \code{rep\_len} are faster simplified versions for two common cases.  They are not generic."
require,base,\code{library} and \code{require} load and attach add-on packages.
return,base,These functions provide the base mechanisms for defining new functions in the \R{} language.
rev,base,"\code{rev} provides a reversed version of its argument.  It is generic function with a default method for vectors and one for \code{\LinkA{dendrogram}{dendrogram}}s.  Note that this is no longer needed (nor efficient) for obtaining vectors sorted into descending order, since that is now rather more directly achievable by \code{\LinkA{sort}{sort}(x, decreasing = TRUE)}."
rm,base,"\code{remove} and \code{rm} can be used to remove objects.  These can be specified successively as character strings, or in the character vector \code{list}, or through a combination of both.  All objects thus specified will be removed.  If \code{envir} is NULL then the currently active environment is searched first.  If \code{inherits} is \code{TRUE} then parents of the supplied directory are searched until a variable with the given name is encountered.  A warning is printed for each variable that is not found."
round,base,\code{ceiling} takes a single numeric argument \code{x} and returns a numeric vector containing the smallest integers not less than the corresponding elements of \code{x}.  \code{floor} takes a single numeric argument \code{x} and returns a numeric vector containing the largest integers not greater than the corresponding elements of \code{x}.  \code{trunc} takes a single numeric argument \code{x} and returns a numeric vector containing the integers formed by truncating the values in \code{x} toward \code{0}.  \code{round} rounds the values in its first argument to the specified number of decimal places (default 0).  \code{signif} rounds the values in its first argument to the specified number of significant digits.
rowMeans,base,Form row and column sums and means for numeric arrays (or data frames).
rownames,base,Retrieve or set the row or column names of a matrix-like object.
rowSums,base,Form row and column sums and means for numeric arrays (or data frames).
sample,base,\code{sample} takes a sample of the specified size from the elements of \code{x} using either with or without replacement.
sapply,base,"\code{lapply} returns a list of the same length as \code{X}, each element of which is the result of applying \code{FUN} to the corresponding element of \code{X}.  \code{sapply} is a user-friendly version and wrapper of \code{lapply} by default returning a vector, matrix or, if \code{simplify = ""array""}, an array if appropriate, by applying \code{simplify2array()}. \code{sapply(x, f, simplify = FALSE, USE.NAMES = FALSE)} is the same as \code{lapply(x, f)}.  \code{vapply} is similar to \code{sapply}, but has a pre-specified type of return value, so it can be safer (and sometimes faster) to use.  \code{replicate} is a wrapper for the common use of \code{sapply} for repeated evaluation of an expression (which will usually involve random number generation).  \code{simplify2array()} is the utility called from \code{sapply()} when \code{simplify} is not false and is similarly called from \code{\LinkA{mapply}{mapply}()}."
save,base,"\code{save} writes an external representation of \R{} objects to the specified file.  The objects can be read back from the file at a later date by using the function \code{\LinkA{load}{load}} or \code{\LinkA{attach}{attach}} (or \code{\LinkA{data}{data}} in some cases).  \code{save.image()} is just a short-cut for `save my current workspace', i.e., \code{save(list = ls(all.names = TRUE), file =     "".RData"", envir = .GlobalEnv)}. It is also what happens with \code{\LinkA{q}{q}(""yes"")}."
saveRDS,base,"Functions to write a single \R{} object to a file, and to restore it."
seq,base,Generate regular sequences.  \code{seq} is a standard generic with a default method.  \code{seq.int} is a primitive which can be much faster but has a few restrictions.  \code{seq\_along} and \code{seq\_len} are very fast primitives for two common cases.
seq_along,base,Generate regular sequences.  \code{seq} is a standard generic with a default method.  \code{seq.int} is a primitive which can be much faster but has a few restrictions.  \code{seq\_along} and \code{seq\_len} are very fast primitives for two common cases.
set.seed,base,"\code{.Random.seed} is an integer vector, containing the random number generator (RNG) \bold{state} for random number generation in \R{}.  It can be saved and restored, but should not be altered by the user.  \code{RNGkind} is a more friendly interface to query or set the kind of RNG in use.  \code{RNGversion} can be used to set the random generators as they were in an earlier \R{} version (for reproducibility).  \code{set.seed} is the recommended way to specify seeds."
sign,base,"\code{sign} returns a vector with the signs of the corresponding elements of \code{x} (the sign of a real number is 1, 0, or \eqn{-1}{} if the number is positive, zero, or negative, respectively).  Note that \code{sign} does not operate on complex vectors."
signif,base,\code{ceiling} takes a single numeric argument \code{x} and returns a numeric vector containing the smallest integers not less than the corresponding elements of \code{x}.  \code{floor} takes a single numeric argument \code{x} and returns a numeric vector containing the largest integers not greater than the corresponding elements of \code{x}.  \code{trunc} takes a single numeric argument \code{x} and returns a numeric vector containing the integers formed by truncating the values in \code{x} toward \code{0}.  \code{round} rounds the values in its first argument to the specified number of decimal places (default 0).  \code{signif} rounds the values in its first argument to the specified number of significant digits.
sin,base,"These functions give the obvious trigonometric functions.  They respectively compute the cosine, sine, tangent, arc-cosine, arc-sine, arc-tangent, and the two-argument arc-tangent.  \code{cospi(x)}, \code{sinpi(x)}, and \code{tanpi(x)}, compute \code{cos(pi*x)}, \code{sin(pi*x)}, and \code{tan(pi*x)}."
sort,base,"Sort (or \emph{order}) a vector or factor (partially) into ascending or descending order.  For ordering along more than one variable, e.g., for sorting data frames, see \code{\LinkA{order}{order}}."
source,base,"\code{source} causes \R{} to accept its input from the named file or URL or connection or expressions directly.  Input is read and \code{\LinkA{parse}{parse}}d from that file until the end of the file is reached, then the parsed expressions are evaluated sequentially in the chosen environment.  \code{withAutoprint(exprs)} is a wrapper for \code{source(exprs =   exprs, ..)} with different defaults.  Its main purpose is to evaluate and auto-print expressions as if in a toplevel context, e.g, as in the \R{} console."
split,base,\code{split} divides the data in the vector \code{x} into the groups defined by \code{f}.  The replacement forms replace values corresponding to such a division.  \code{unsplit} reverses the effect of \code{split}.
stopifnot,base,"If any of the expressions in \code{...} are not \code{\LinkA{all}{all}} \code{TRUE}, \code{\LinkA{stop}{stop}} is called, producing an error message indicating the \emph{first} of the elements of \code{...} which were not true."
strsplit,base,Split the elements of a character vector \code{x} into substrings according to the matches to substring \code{split} within them.
sub,base,"\code{grep}, \code{grepl}, \code{regexpr}, \code{gregexpr} and \code{regexec} search for matches to argument \code{pattern} within each element of a character vector: they differ in the format of and amount of detail in the results.  \code{sub} and \code{gsub} perform replacement of the first and all matches respectively."
sum,base,\code{sum} returns the sum of all the values present in its arguments.
summary,base,\code{summary} is a generic function used to produce result summaries of the results of various model fitting functions.  The function invokes particular \code{\LinkA{methods}{methods}} which depend on the \code{\LinkA{class}{class}} of the first argument.
suppressPackageStartupMessages,base,Generate a diagnostic message from its arguments.
Sys.time,base,\code{Sys.time} and \code{Sys.Date} returns the system's idea of the current date with and without time.
t,base,"Given a matrix or \code{\LinkA{data.frame}{data.frame}} \code{x}, \code{t} returns the transpose of \code{x}."
table,base,\code{table} uses the cross-classifying factors to build a contingency table of the counts at each combination of factor levels.
tapply,base,"Apply a function to each cell of a ragged array, that is to each (non-empty) group of values given by a unique combination of the levels of certain factors."
tempdir,base,\code{tempfile} returns a vector of character strings which can be used as names for temporary files.
tolower,base,"Translate characters in character vectors, in particular from upper to lower case or vice versa."
toupper,base,"Translate characters in character vectors, in particular from upper to lower case or vice versa."
unique,base,"\code{unique} returns a vector, data frame or array like \code{x} but with duplicate elements/rows removed."
units,base,"Time intervals creation, printing, and some arithmetic.  The \code{\LinkA{print}{print}()} method calls these ``time differences''."
weekdays,base,"Extract the weekday, month or quarter, or the Julian time (days since some origin).  These are generic functions: the methods for the internal date-time classes are documented here."
which,base,"Give the \code{TRUE} indices of a logical object, allowing for array indices."
which.max,base,"Determines the location, i.e., index of the (first) minimum or maximum of a numeric (or logical) vector."
writeLines,base,Write text lines to a connection.
tidy,broom,"The output of tidy is always a data.frame with disposable row names. It is therefore suited for further manipulation by packages like dplyr, reshape2, ggplot2 and ggvis."
avPlots,car,These functions construct added-variable (also called  partial-regression) plots for  linear and generalized linear models.
anti_join,dplyr,"These are generic functions that dispatch to individual tbl methods - see the method documentation for details of individual data sources. \code{x} and \code{y} should usually be from the same data source, but if \code{copy} is \code{TRUE}, \code{y} will automatically be copied to the same source as \code{x}."
arrange,dplyr,Use \code{\LinkA{desc()}{desc}} to sort a variable in descending order.
as.tbl,dplyr,This is a generic method that dispatches based on the first argument.
desc,dplyr,Transform a vector into a format that will be sorted in descending order. This is useful within \code{\LinkA{arrange()}{arrange}}.
ends_with,dplyr,"These functions allow you to select variables based on their names. \begin{itemize}  \item \code{starts\_with()}: starts with a prefix \item \code{ends\_with()}: ends with a prefix \item \code{contains()}: contains a literal string \item \code{matches()}: matches a regular expression \item \code{num\_range()}: a numerical range like x01, x02, x03. \item \code{one\_of()}: variables in character vector. \item \code{everything()}: all variables.  \end{itemize} "
everything,dplyr,"These functions allow you to select variables based on their names. \begin{itemize}  \item \code{starts\_with()}: starts with a prefix \item \code{ends\_with()}: ends with a prefix \item \code{contains()}: contains a literal string \item \code{matches()}: matches a regular expression \item \code{num\_range()}: a numerical range like x01, x02, x03. \item \code{one\_of()}: variables in character vector. \item \code{everything()}: all variables.  \end{itemize} "
filter,dplyr,"Use \code{filter()} find rows/cases where conditions are true. Unlike base subsetting, rows where the condition evaluates to \code{NA} are dropped."
first,dplyr,"These are straightforward wrappers around \code{\LinkA{[[}{[[}}. The main advantage is that you can provide an optional secondary vector that defines the ordering, and provide a default value to use when the input is shorter than expected."
full_join,dplyr,"These are generic functions that dispatch to individual tbl methods - see the method documentation for details of individual data sources. \code{x} and \code{y} should usually be from the same data source, but if \code{copy} is \code{TRUE}, \code{y} will automatically be copied to the same source as \code{x}."
group_by,dplyr,"Most data operations are done on groups defined by variables. \code{group\_by()} takes an existing tbl and converts it into a grouped tbl where operations are performed ""by group"". \code{ungroup()} removes grouping."
inner_join,dplyr,"These are generic functions that dispatch to individual tbl methods - see the method documentation for details of individual data sources. \code{x} and \code{y} should usually be from the same data source, but if \code{copy} is \code{TRUE}, \code{y} will automatically be copied to the same source as \code{x}."
last,dplyr,"These are straightforward wrappers around \code{\LinkA{[[}{[[}}. The main advantage is that you can provide an optional secondary vector that defines the ordering, and provide a default value to use when the input is shorter than expected."
left_join,dplyr,"These are generic functions that dispatch to individual tbl methods - see the method documentation for details of individual data sources. \code{x} and \code{y} should usually be from the same data source, but if \code{copy} is \code{TRUE}, \code{y} will automatically be copied to the same source as \code{x}."
mutate,dplyr,\code{mutate()} adds new variables and preserves existing; \code{transmute()} drops existing variables.
n,dplyr,"This function is implemented specifically for each data source and can only be used from within \code{\LinkA{summarise()}{summarise}}, \code{\LinkA{mutate()}{mutate}} and \code{\LinkA{filter()}{filter}}."
nth,dplyr,"These are straightforward wrappers around \code{\LinkA{[[}{[[}}. The main advantage is that you can provide an optional secondary vector that defines the ordering, and provide a default value to use when the input is shorter than expected."
one_of,dplyr,"These functions allow you to select variables based on their names. \begin{itemize}  \item \code{starts\_with()}: starts with a prefix \item \code{ends\_with()}: ends with a prefix \item \code{contains()}: contains a literal string \item \code{matches()}: matches a regular expression \item \code{num\_range()}: a numerical range like x01, x02, x03. \item \code{one\_of()}: variables in character vector. \item \code{everything()}: all variables.  \end{itemize} "
rename,dplyr,\code{select()} keeps only the variables you mention; \code{rename()} keeps all variables.
right_join,dplyr,"These are generic functions that dispatch to individual tbl methods - see the method documentation for details of individual data sources. \code{x} and \code{y} should usually be from the same data source, but if \code{copy} is \code{TRUE}, \code{y} will automatically be copied to the same source as \code{x}."
sample_frac,dplyr,This is a wrapper around \code{\LinkA{sample.int()}{sample.int}} to make it easy to select random rows from a table. It currently only works for local tbls.
sample_n,dplyr,This is a wrapper around \code{\LinkA{sample.int()}{sample.int}} to make it easy to select random rows from a table. It currently only works for local tbls.
select,dplyr,\code{select()} keeps only the variables you mention; \code{rename()} keeps all variables.
slice,dplyr,"Slice does not work with relational databases because they have no intrinsic notion of row order. If you want to perform the equivalent operation, use \code{\LinkA{filter()}{filter}} and \code{\LinkA{row\_number()}{row.Rul.number}}."
starts_with,dplyr,"These functions allow you to select variables based on their names. \begin{itemize}  \item \code{starts\_with()}: starts with a prefix \item \code{ends\_with()}: ends with a prefix \item \code{contains()}: contains a literal string \item \code{matches()}: matches a regular expression \item \code{num\_range()}: a numerical range like x01, x02, x03. \item \code{one\_of()}: variables in character vector. \item \code{everything()}: all variables.  \end{itemize} "
summarise,dplyr,\code{summarise()} is typically used on grouped data created by \code{\LinkA{group\_by()}{group.Rul.by}}. The output will have one row for each group.
summarize,dplyr,\code{summarise()} is typically used on grouped data created by \code{\LinkA{group\_by()}{group.Rul.by}}. The output will have one row for each group.
tally,dplyr,"\code{tally()} is a convenient wrapper for summarise that will either call \code{\LinkA{n()}{n}} or \code{\LinkA{sum}{sum}(n)} depending on whether you're tallying for the first time, or re-tallying. \code{count()} is similar but calls \code{\LinkA{group\_by()}{group.Rul.by}} before and \code{\LinkA{ungroup()}{ungroup}} after.  \code{add\_tally()} adds a column ""n"" to a table based on the number of items within each existing group, while \code{add\_count()} is a shortcut that does the grouping as well. These functions are to \code{\LinkA{tally()}{tally}} and \code{\LinkA{count()}{count}} as \code{\LinkA{mutate()}{mutate}} is to \code{\LinkA{summarise()}{summarise}}: they add an additional column rather than collapsing each group."
transmute,dplyr,\code{mutate()} adds new variables and preserves existing; \code{transmute()} drops existing variables.
aes,ggplot2,Aesthetic mappings describe how variables in the data are mapped to visual properties (aesthetics) of geoms. Aesthetic mappings can be set in \code{\LinkA{ggplot2}{ggplot2}} and in individual layers.
alpha,ggplot2,"These objects are imported from other packages. Follow the links below to see their documentation.  \begin{description}  \item[grid] \code{\LinkA{unit}{unit}}, \code{\LinkA{arrow}{arrow}}  \item[scales] \code{\LinkA{alpha}{alpha}}  \end{description}"
annotate,ggplot2,"This function adds geoms to a plot, but unlike typical a geom function, the properties of the geoms are not mapped from variables of a data frame, but are instead passed in as vectors. This is useful for adding small annotations (such as text labels) or if you have your data in vectors, and for some reason don't want to put them in a data frame."
element_rect,ggplot2,"In conjunction with the \LinkA{theme}{theme} system, the \code{element\_} functions specify the display of how non-data components of the plot are a drawn.  \begin{itemize}  \item \code{element\_blank}: draws nothing, and assigns no space. \item \code{element\_rect}: borders and backgrounds. \item \code{element\_line}: lines. \item \code{element\_text}: text.  \end{itemize}   \code{rel()} is used to specify sizes relative to the parent, \code{margins()} is used to specify the margins of elements."
element_text,ggplot2,"In conjunction with the \LinkA{theme}{theme} system, the \code{element\_} functions specify the display of how non-data components of the plot are a drawn.  \begin{itemize}  \item \code{element\_blank}: draws nothing, and assigns no space. \item \code{element\_rect}: borders and backgrounds. \item \code{element\_line}: lines. \item \code{element\_text}: text.  \end{itemize}   \code{rel()} is used to specify sizes relative to the parent, \code{margins()} is used to specify the margins of elements."
facet_wrap,ggplot2,\code{facet\_wrap} wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than \code{\LinkA{facet\_grid}{facet.Rul.grid}} because most displays are roughly rectangular.
geom_bar,ggplot2,"There are two types of bar charts: \code{geom\_bar} makes the height of the bar proportional to the number of cases in each group (or if the \code{weight} aethetic is supplied, the sum of the weights). If you want the heights of the bars to represent values in the data, use \LinkA{geom\_col}{geom.Rul.col} instead. \code{geom\_bar} uses \code{stat\_count} by default: it counts the  number of cases at each x position. \code{geom\_col} uses \code{stat\_identity}: it leaves the data as is."
geom_boxplot,ggplot2,"The boxplot compactly displays the distribution of a continuous variable. It visualises five summary statistics (the median, two hinges and two whiskers), and all ""outlying"" points individually."
geom_density,ggplot2,"Computes and draws kernel density estimate, which is a smoothed version of the histogram. This is a useful alternative to the histogram if for continuous data that comes from an underlying smooth distribution."
geom_jitter,ggplot2,"The jitter geom is a convenient shortcut for \code{geom\_point(position = ""jitter"")}. It adds a small amount of random variation to the location of each point, and is a useful way of handling overplotting caused by discreteness in smaller datasets."
geom_line,ggplot2,"\code{geom\_path()} connects the observations in the order in which they appear in the data. \code{geom\_line()} connects them in order of the variable on the x axis. \code{geom\_step()} creates a stairstep plot, highlighting exactly when changes occur. The \code{group} aesthetic determines which cases are connected together."
geom_point,ggplot2,"The point geom is used to create scatterplots. The scatterplot is most useful for displaying the relationship between two continuous variables. It can be used to compare one continuous and one categorical variable, or two categorical variables, but a variation like \code{\LinkA{geom\_jitter}{geom.Rul.jitter}}, \code{\LinkA{geom\_count}{geom.Rul.count}}, or \code{\LinkA{geom\_bin2d}{geom.Rul.bin2d}} is usually more appropriate."
geom_smooth,ggplot2,Aids the eye in seeing patterns in the presence of overplotting. \code{geom\_smooth} and \code{stat\_smooth} are effectively aliases: they both use the same arguments. Use \code{geom\_smooth} unless you want to display the results with a non-standard geom.
ggplot,ggplot2,\code{ggplot()} initializes a ggplot object. It can be used to declare the input data frame for a graphic and to specify the set of plot aesthetics intended to be common throughout all subsequent layers unless specifically overridden.
ggtitle,ggplot2,Good labels are critical for making your plots accessible to a wider audience. Ensure the axis and legend labels display the full variable name. Use the plot \code{title} and \code{subtitle} to explain the main findings. It's common to use the \code{caption} to provide information about the data source.
guide_legend,ggplot2,"Legend type guide shows key (i.e., geoms) mapped onto values. Legend guides for various scales are integrated if possible."
guides,ggplot2,"Guides for each scale can be set scale-by-scale with the \code{guide} argument, or en masse with \code{guides()}."
qplot,ggplot2,"\code{qplot} is a shortcut designed to be familiar if you're used to base \code{\LinkA{plot}{plot}()}. It's a convenient wrapper for creating a number of different types of plots using a consistent calling scheme. It's great for allowing you to produce plots quickly, but I highly recommend learning \code{\LinkA{ggplot}{ggplot}()} as it makes it easier to create complex graphics."
scale_color_manual,ggplot2,This allows you to specify you own set of mappings from levels in the data to aesthetic values.
scale_colour_manual,ggplot2,This allows you to specify you own set of mappings from levels in the data to aesthetic values.
scale_fill_brewer,ggplot2,"The \code{brewer} scales provides sequential, diverging and qualitative colour schemes from ColorBrewer. These are particularly well suited to display discrete values on a map. See \url{http://colorbrewer2.org} for more information."
scale_fill_gradient,ggplot2,"\code{scale\_*\_gradient} creates a two colour gradient (low-high), \code{scale\_*\_gradient2} creates a diverging colour gradient (low-mid-high), \code{scale\_*\_gradientn} creats a n-colour gradient."
scale_linetype_manual,ggplot2,This allows you to specify you own set of mappings from levels in the data to aesthetic values.
theme,ggplot2,"Use \code{theme()} to modify individual components of a theme, allowing you to control the appearance of all non-data components of the plot. \code{theme()} only affects a single plot: see \code{\LinkA{theme\_update}{theme.Rul.update}} if you want modify the active theme, to affect all subsequent plots."
theme_bw,ggplot2,These are complete themes which control all non-data display. Use \code{\LinkA{theme}{theme}} if you just need to tweak the display of an existing theme.
xlab,ggplot2,Good labels are critical for making your plots accessible to a wider audience. Ensure the axis and legend labels display the full variable name. Use the plot \code{title} and \code{subtitle} to explain the main findings. It's common to use the \code{caption} to provide information about the data source.
xlim,ggplot2,"This is a shortcut for supplying the \code{limits} argument to the individual scales. Note that, by default, any values outside the limits will be replaced with \code{NA}."
ylab,ggplot2,Good labels are critical for making your plots accessible to a wider audience. Ensure the axis and legend labels display the full variable name. Use the plot \code{title} and \code{subtitle} to explain the main findings. It's common to use the \code{caption} to provide information about the data source.
abline,graphics,This function adds one or more straight lines through the current plot.
barplot,graphics,Creates a bar plot with vertical or horizontal bars.
boxplot,graphics,Produce box-and-whisker plot(s) of the given (grouped) values.
hist,graphics,"The generic function \code{hist} computes a histogram of the given data values.  If \code{plot = TRUE}, the resulting object of \LinkA{class}{class} \code{""histogram""} is plotted by \code{\LinkA{plot.histogram}{plot.histogram}}, before it is returned."
legend,graphics,This function can be used to add legends to plots.  Note that a call to the function \code{\LinkA{locator}{locator}(1)} can be used in place of the \code{x} and \code{y} arguments.
lines,graphics,A generic function taking coordinates given in various ways and joining the corresponding points with line segments.
pairs,graphics,A matrix of scatterplots is produced.
par,graphics,"\code{par} can be used to set or query graphical parameters. Parameters can be set by specifying them as arguments to \code{par} in \code{tag = value} form, or by passing them as a list of tagged values."
plot,graphics,"Generic function for plotting of \R{} objects.  For more details about the graphical parameter arguments, see \code{\LinkA{par}{par}}.  For simple scatter plots, \code{\LinkA{plot.default}{plot.default}} will be used. However, there are \code{plot} methods for many \R{} objects, including \code{\LinkA{function}{function}}s, \code{\LinkA{data.frame}{data.frame}}s, \code{\LinkA{density}{density}} objects, etc.  Use \code{methods(plot)} and the documentation for these."
points,graphics,"\code{points} is a generic function to draw a sequence of points at the specified coordinates.  The specified character(s) are plotted, centered at the coordinates."
smoothScatter,graphics,"\code{smoothScatter} produces a smoothed color density representation of a scatterplot, obtained through a (2D) kernel density estimate."
text,graphics,"\code{text} draws the strings given in the vector \code{labels} at the coordinates given by \code{x} and \code{y}. \code{y} may be missing since \code{\LinkA{xy.coords}{xy.coords}(x, y)} is used for construction of the coordinates."
dev.off,grDevices,These functions provide control over multiple graphics devices.
gray,grDevices,Create a vector of colors from a vector of gray levels.
palette,grDevices,View or manipulate the color palette which is used when a \code{col=} has a numeric index.
png,grDevices,"Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files."
gpar,grid,"\code{gpar()} should be used to create a set of graphical parameter settings.  It returns an object of class \code{""gpar""}.  This is basically a list of name-value pairs.  \code{get.gpar()} can be used to query the current graphical parameter settings."
grid.circle,grid,Functions to create and draw a circle.
grid.newpage,grid,This function erases the current device or moves to a new page.
grid.polygon,grid,These functions create and draw a polygon. The final point will automatically be connected to the initial point.
grid.polyline,grid,These functions create and draw a series of lines.
grid.rect,grid,These functions create and draw rectangles.
pushViewport,grid,Grid maintains a tree of viewports --- nested drawing contexts.  These functions provide ways to add or remove viewports and to navigate amongst viewports in the tree.
viewport,grid,"These functions create viewports, which describe rectangular regions on a graphics device and define a number of coordinate systems within those regions."
include_graphics,knitr,"When plots are not generated from R code, there is no way for \pkg{knitr} to capture plots automatically. In this case, you may generate the images manually and pass their file paths to this function to include them in the output. The major advantage of using this function is that it is portable in the sense that it works for all document formats that \pkg{knitr} supports, so you do not need to think if you have to use, for example, LaTeX or Markdown syntax, to embed an external image. Chunk options related to graphics output that work for normal R plots also work for these images, such as \code{out.width} and \code{out.height}."
purl,knitr,"This function takes an input file, extracts the R code in it according to a list of patterns, evaluates the code and writes the output in another file. It can also tangle R source code from the input document (\code{purl()} is a wrapper to \code{knit(..., tangle = TRUE)}). The \code{knitr.purl.inline} option can be used to also tangle the code of inline expressions (disabled by default)."
as.period,lubridate,"as.period changes Interval, Duration, difftime and numeric class objects to Period class objects with the specified units."
mdy,lubridate,"Transforms dates stored in character and numeric vectors to Date or POSIXct objects (see \code{tz} argument). These functions recognize arbitrary non-digit separators as well as no separator. As long as the order of formats is correct, these functions will parse dates correctly even when the input vectors contain differently formatted dates. See examples."
select,MASS,Fit a linear model by ridge regression.
rowMins,matrixStats,Gets the range of values in each row (column) of a matrix.
merge,memisc,
mtable,memisc,\code{mtable} produces a table of estimates for several models. 
print,memisc,
rename,memisc,\code{rename} changes the names of a named object.
sample,memisc,
summary,memisc,
unique,memisc,
write.mtable,memisc,\code{mtable} produces a table of estimates for several models. 
top,NCmisc,"This function runs the unix 'top' command and returns the overall CPU and RAM usage, and optionally the table of processes and resource use for each. Works only with unix-based systems such as Mac OS X and Linux, where 'top' is installed. Default is to return CPU and RAM overall stats, to get detailed stats instead, set Table=TRUE."
pander,pander,Prints an R object in Pandoc's markdown.
arrange,plyr,"This function completes the subsetting, transforming and ordering triad with a function that works in a similar way to \code{\LinkA{subset}{subset}} and \code{\LinkA{transform}{transform}} but for reordering a data frame by its columns. This saves a lot of typing!"
desc,plyr,Transform a vector into a format that will be sorted in descending order.
l_ply,plyr,"For each element of a list, apply function and discard results"
mutate,plyr,"This function is very similar to \code{\LinkA{transform}{transform}} but it executes the transformations iteratively so that later transformations can use the columns created by earlier transformations.  Like transform, unnamed components are silently dropped."
rename,plyr,"Modify names by name, not position."
revalue,plyr,"If \code{x} is a factor, the named levels of the factor will be replaced with the new values."
summarise,plyr,"Summarise works in an analogous way to \code{\LinkA{mutate}{mutate}}, except instead of adding columns to an existing data frame, it creates a new data frame.  This is particularly useful in conjunction with \code{\LinkA{ddply}{ddply}} as it makes it easy to perform group-wise summaries."
summarize,plyr,"Summarise works in an analogous way to \code{\LinkA{mutate}{mutate}}, except instead of adding columns to an existing data frame, it creates a new data frame.  This is particularly useful in conjunction with \code{\LinkA{ddply}{ddply}} as it makes it easy to perform group-wise summaries."
alpha,psych,"Internal consistency measures of reliability range from \eqn{\omega_h}{} to \eqn{\alpha}{} to \eqn{\omega_t}{}.  This function reports two estimates: Cronbach's coefficient \eqn{\alpha}{} and Guttman's \eqn{\lambda_6}{}.  Also reported are item - whole correlations, \eqn{\alpha}{} if an item is omitted, and item means and standard deviations."
corr.test,psych,"Although the cor function finds the correlations for a matrix, it does not report probability values. corr.test uses cor to find the correlations for either complete or pairwise data and reports the sample sizes and probability values as well. For symmetric matrices, raw probabilites are reported below the diagonal and correlations adjusted for multiple comparisons above the diagonal. In the case of different x and ys, the default is to adjust the probabilities for multiple tests.  "
brewer.pal,RColorBrewer,Creates nice looking color palettes especially for thematic maps
read_csv,readr,"\code{read\_csv()} and \code{read\_tsv()} are special cases of the general \code{read\_delim()}. They're useful for reading the most common types of flat file data, comma separated values and tab separated values, respectively. \code{read\_csv2()} uses \code{;} for separators, instead of \code{,}. This is common in European countries which use \code{,} as the decimal separator."
read_tsv,readr,"\code{read\_csv()} and \code{read\_tsv()} are special cases of the general \code{read\_delim()}. They're useful for reading the most common types of flat file data, comma separated values and tab separated values, respectively. \code{read\_csv2()} uses \code{;} for separators, instead of \code{,}. This is common in European countries which use \code{,} as the decimal separator."
write_csv,readr,"This is about twice as fast as \code{\LinkA{write.csv()}{write.csv}}, and never writes row names. \code{output\_column()} is a generic method used to coerce columns to suitable output."
read_excel,readxl,"Read xls and xlsx files.  While \code{read\_excel()} auto detects the format from the file extension, \code{read\_xls()} and \code{read\_xlsx()} can be used to read files without extension."
melt,reshape,Melt an object into a form suitable for easy casting.
rename,reshape,Rename an object
duplicated,rJava,
head,rJava,
rev,rJava,
sort,rJava,
str,rJava,
tail,rJava,
unique,rJava,
render,rmarkdown,Render the input file to the specified output format using pandoc. If the input requires knitting then \code{\LinkA{knit}{knit}} is called prior to pandoc.
stargazer,stargazer,"  The \code{stargazer} command produces LaTeX code, HTML code and ASCII text for well-formatted tables that hold regression analysis results from several models side-by-side. It can also output summary statistics and data frame content. \code{stargazer} supports a large number model objects from a variety of packages. Please see \LinkA{stargazer models}{stargazer models}."
anova,stats,Compute analysis of variance (or deviance) tables for one or more fitted model objects.
binomial,stats,Family objects provide a convenient way to specify the details of the models used by functions such as \code{\LinkA{glm}{glm}}.  See the documentation for \code{\LinkA{glm}{glm}} for the details on how such model fitting takes place.
chisq.test,stats,\code{chisq.test} performs chi-squared contingency table tests and goodness-of-fit tests.
coef,stats,\code{coef} is a generic function which extracts model coefficients from objects returned by modeling functions.  \code{coefficients} is an \emph{alias} for it.
confint,stats,"Computes confidence intervals for one or more parameters in a fitted model.  There is a default and a method for objects inheriting from class \code{""\LinkA{lm}{lm}""}."
cor,stats,"\code{var}, \code{cov} and \code{cor} compute the variance of \code{x} and the covariance or correlation of \code{x} and \code{y} if these are vectors.   If \code{x} and \code{y} are matrices then the covariances (or correlations) between the columns of \code{x} and the columns of \code{y} are computed.  \code{cov2cor} scales a covariance matrix into the corresponding correlation matrix \emph{efficiently}."
cor.test,stats,"Test for association between paired samples, using one of Pearson's product moment correlation coefficient, Kendall's \eqn{\tau}{} or Spearman's \eqn{\rho}{}."
density,stats,The (S3) generic function \code{density} computes kernel density estimates.  Its default method does so with the given kernel and bandwidth for univariate observations.
embed,stats,Embeds the time series \code{x} into a low-dimensional Euclidean space.
filter,stats,Applies linear filtering to a univariate time series or to each series separately of a multivariate time series.
fisher.test,stats,Performs Fisher's exact test for testing the null of independence of rows and columns in a contingency table with fixed marginals.
glm,stats,"\code{glm} is used to fit generalized linear models, specified by giving a symbolic description of the linear predictor and a description of the error distribution."
lm,stats,"\code{lm} is used to fit linear models. It can be used to carry out regression, single stratum analysis of variance and analysis of covariance (although \code{\LinkA{aov}{aov}} may provide a more convenient interface for these)."
median,stats,Compute the sample median.
prop.test,stats,"\code{prop.test} can be used for testing the null that the proportions (probabilities of success) in several groups are the same, or that they equal certain given values."
quantile,stats,The generic function \code{quantile} produces sample quantiles corresponding to the given probabilities. The smallest observation corresponds to a probability of 0 and the largest to a probability of 1.
rnorm,stats,"Density, distribution function, quantile function and random generation for the normal distribution with mean equal to \code{mean} and standard deviation equal to \code{sd}."
scatter.smooth,stats,Plot and add a smooth curve computed by \code{loess} to a scatter plot.
sd,stats,This function computes the standard deviation of the values in \code{x}. If \code{na.rm} is \code{TRUE} then missing values are removed before computation proceeds.
t.test,stats,Performs one and two sample t-tests on vectors of data.
var,stats,"\code{var}, \code{cov} and \code{cor} compute the variance of \code{x} and the covariance or correlation of \code{x} and \code{y} if these are vectors.   If \code{x} and \code{y} are matrices then the covariances (or correlations) between the columns of \code{x} and the columns of \code{y} are computed.  \code{cov2cor} scales a covariance matrix into the corresponding correlation matrix \emph{efficiently}."
wilcox.test,stats,Performs one- and two-sample Wilcoxon tests on vectors of data; the latter is also known as `Mann-Whitney' test.
fixed,stringr,"\begin{description}  \item[fixed] Compare literal bytes in the string. This is very fast, but not usually what you want for non-ASCII character sets. \item[coll] Compare strings respecting standard collation rules. \item[regex] The default. Uses ICU regular expressions. \item[boundary] Match boundaries between things.  \end{description} "
str_detect,stringr,Vectorised over \code{string} and \code{pattern}.
str_extract,stringr,Vectorised over \code{string} and \code{pattern}.
str_extract_all,stringr,Vectorised over \code{string} and \code{pattern}.
str_replace,stringr,"Vectorised over \code{string}, \code{pattern} and \code{replacement}."
str_split,stringr,Vectorised over \code{string} and \code{pattern}.
str_subset,stringr,"\code{str\_subset()} is a wrapper around \code{x[str\_detect(x, pattern)]}, and is equivalent to \code{grep(pattern, x, value = TRUE)}. \code{str\_which()} is a wrapper around \code{which(str\_detect(x, pattern))}, and is equivalent to \code{grep(pattern, x)}."
str_trim,stringr,Trim whitespace from start and end of string.
pivot_longer,tidyr,"Pivot_longer takes multiple columns and collapses into key-value pairs, duplicating all other columns as needed. You use \code{pivot_longer()} when you notice that you have columns that are not variables."
separate,tidyr,"Given either regular expression or a vector of character positions, \code{separate()} turns a single character column into multiple columns."
pivot_wider,tidyr,Pivot a key-value pair across multiple columns.
unite,tidyr,Convenience function to paste together multiple columns into one.
data,utils,"Loads specified data sets, or list the available data sets."
download.file,utils,This function can be used to download a file from the Internet.
head,utils,"Returns the first or last parts of a vector, matrix, table, data frame or function.  Since \code{head()} and \code{tail()} are generic functions, they may also have been extended to other classes."
read.csv,utils,"Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file."
str,utils,"Compactly display the internal \bold{str}ucture of an \R{} object, a diagnostic function and an alternative to \code{\LinkA{summary}{summary}} (and to some extent, \code{\LinkA{dput}{dput}}).  Ideally, only one line for each `basic' structure is displayed.  It is especially well suited to compactly display the (abbreviated) contents of (possibly nested) lists.  The idea is to give reasonable output for \bold{any} \R{} object.  It calls \code{\LinkA{args}{args}} for (non-primitive) function objects.  \code{strOptions()} is a convenience function for setting \code{\LinkA{options}{options}(str = .)}, see the examples."
tail,utils,"Returns the first or last parts of a vector, matrix, table, data frame or function.  Since \code{head()} and \code{tail()} are generic functions, they may also have been extended to other classes."
write.csv,utils,\code{write.table} prints its required argument \code{x} (after converting it to a data frame if it is not one nor a matrix) to a file or \LinkA{connection}{connection}.
write.xlsx,xlsx,Write a \code{data.frame} to an Excel workbook.